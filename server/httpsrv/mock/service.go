// Code generated by MockGen. DO NOT EDIT.
// Source: server/httpsrv/service.go

// Package mock_httpsrv is a generated GoMock package.
package mock_httpsrv

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/admission/v1"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// DecodeAdmissionReview mocks base method
func (m *MockService) DecodeAdmissionReview(data []byte) (*v1.AdmissionReview, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecodeAdmissionReview", data)
	ret0, _ := ret[0].(*v1.AdmissionReview)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DecodeAdmissionReview indicates an expected call of DecodeAdmissionReview
func (mr *MockServiceMockRecorder) DecodeAdmissionReview(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecodeAdmissionReview", reflect.TypeOf((*MockService)(nil).DecodeAdmissionReview), data)
}

// Validate mocks base method
func (m *MockService) Validate(arg0 *v1.AdmissionRequest) *v1.AdmissionResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(*v1.AdmissionResponse)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *MockServiceMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockService)(nil).Validate), arg0)
}

// Mutate mocks base method
func (m *MockService) Mutate(arg0 *v1.AdmissionRequest) *v1.AdmissionResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Mutate", arg0)
	ret0, _ := ret[0].(*v1.AdmissionResponse)
	return ret0
}

// Mutate indicates an expected call of Mutate
func (mr *MockServiceMockRecorder) Mutate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Mutate", reflect.TypeOf((*MockService)(nil).Mutate), arg0)
}

// AddOwners mocks base method
func (m *MockService) AddOwners(arg0 *v1.AdmissionRequest) *v1.AdmissionResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddOwners", arg0)
	ret0, _ := ret[0].(*v1.AdmissionResponse)
	return ret0
}

// AddOwners indicates an expected call of AddOwners
func (mr *MockServiceMockRecorder) AddOwners(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddOwners", reflect.TypeOf((*MockService)(nil).AddOwners), arg0)
}
